digraph "classes" {
rankdir=BT
charset="utf-8"
"common.plots.FrozenLakePlots" [color="black", fontcolor="black", label=<{FrozenLakePlots|rewards : Rewards<br ALIGN="LEFT"/>|get_policy_directions(policy: np.ndarray, map_size: Tuple[int]): np.ndarray<br ALIGN="LEFT"/>plot(policy: np.ndarray, env: Env, algorithm: Algorithm, params: Params): None<br ALIGN="LEFT"/>plot_policy_map(policy: np.ndarray, params: Params, ax: plt.Axes): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"common.plots.Plots" [color="black", fontcolor="black", label=<{Plots|rewards : Rewards<br ALIGN="LEFT"/>|<I>plot</I>(policy: np.ndarray, env: Env, algorithm: Algorithm, params: Params): None<br ALIGN="LEFT"/>plot_average_rewards(average_rewards: list, ax: plt.Axes): None<br ALIGN="LEFT"/>plot_cumulative_rewards(history: AlgorithmHistory, ax: plt.Axes)<br ALIGN="LEFT"/>plot_episodes_number_of_steps(history: AlgorithmHistory, ax: plt.Axes): None<br ALIGN="LEFT"/>plot_epsilons(epsilons: list, ax: plt.Axes): None<br ALIGN="LEFT"/>plot_games_results(n_losses: int, n_runs: int, ax: plt.Axes): None<br ALIGN="LEFT"/>plot_games_steps(steps: list, steps_when_winning: list, n_runs: int, ax: plt.Axes): None<br ALIGN="LEFT"/>plot_history_heatmap(history: AlgorithmHistory, params: Params, env: Env, ax: plt.Axes): None<br ALIGN="LEFT"/>plot_last_frame(env: Env, ax: plt.Axes): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"common.plots.TaxiDriverPlots" [color="black", fontcolor="black", label=<{TaxiDriverPlots|rewards : Rewards<br ALIGN="LEFT"/>|plot(policy: np.ndarray, env: Env, algorithm: Algorithm, params: Params): None<br ALIGN="LEFT"/>plot_brute_force_plot(policy: np.ndarray, env: Env, algorithm: Algorithm, params: Params): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"common.plots.FrozenLakePlots" -> "common.plots.Plots" [arrowhead="empty", arrowtail="none"];
"common.plots.TaxiDriverPlots" -> "common.plots.Plots" [arrowhead="empty", arrowtail="none"];
}
